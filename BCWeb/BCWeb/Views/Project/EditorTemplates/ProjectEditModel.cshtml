@model BCWeb.Models.Project.ViewModel.ProjectEditModel
@using BCWeb.Helpers.Html

@Html.HiddenFor(m => m.Id)
<div class="row">
    <div class="large-6 columns large-centered">
        @Html.ValidationSummary()
        @Html.HiddenFor(m => m.ArchitectId)
    </div>
</div>
<div class="row">
    <div class="large-5 columns">
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title)
    </div>
    <div class="large-4 columns">
        @Html.LabelFor(m => m.Number)
        @Html.TextBoxFor(m => m.Number)
    </div>
    <div class="large-3 columns">
        @Html.LabelFor(m => m.Architect)
        @Html.DisplayFor(m => m.Architect)
    </div>
</div>


<div class="row">
    <div class="large-12 columns">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description)
    </div>
</div>

<div class="row">
    <div class="large-12 columns">
        <fieldset class="large-3 columns left">
            <legend>Bid Deadline</legend>
            @Html.HiddenFor(m => m.BidDateTime)
            <div class="row collapse">
                <div class="large-8 small-8 columns ">
                    <input type="text" id="BidDateTB" name="BidDateTB" ng-model="BidDateTB" ng-change="setBidDeadline()" />
                </div>
                <div class="large-4 small-4 columns">
                    <span class="postfix">Date</span>
                </div>
            </div>
            <div class="row collapse">
                <div class="large-8 small-8 columns">
                    <input type="text" id="BidTimeTB" name="BidTimeTB" ng-model="BidTimeTB" ng-change="setBidDeadline()" />
                </div>
                <div class="large-4 small-4 columns">
                    <span class="postfix">Time</span>
                </div>
            </div>
        </fieldset>



        <fieldset class="large-4 columns left">
            <legend>Walk Though</legend>
            @Html.HiddenFor(m => m.WalkThruDateTime)
            <div class="row">
                <div class="large-3 columns">
                    <label>
                        @Html.RadioButtonFor(m => m.WalkThruStatus, BCModel.Projects.WalkThruStatus.NoWalkThru, new { ng_model = "walkThru" })
                        None</label>
                    <label>
                        @Html.RadioButtonFor(m => m.WalkThruStatus, BCModel.Projects.WalkThruStatus.WalkThruTBD, new { ng_model = "walkThru" })
                        TBD</label>
                    <label>
                        @Html.RadioButtonFor(m => m.WalkThruStatus, BCModel.Projects.WalkThruStatus.WalkThruIncluded, new { ng_model = "walkThru" })
                        Yes</label>
                </div>

                <div class="large-9 columns">
                    <div class="row collapse">
                        <div class="large-8 small-8 columns">
                            <input type="text" id="WalkThruDateTB" name="WalkThruDateTB" ng-model="WalkThruDateTB" ng-disabled="!(walkThru=='WalkThruIncluded')" ng-change="setWalkThru()" />
                        </div>
                        <div class="large-4 small-4 columns"><span class="postfix">Date</span></div>
                    </div>
                    <div class="row collapse">
                        <div class="large-8 small-8 columns">
                            <input type="text" id="WalkThruTimeTB" name="WalkThruTimeTB" ng-model="WalkThruTimeTB" ng-disabled="!(walkThru=='WalkThruIncluded')" ng-change="setWalkThru()" />
                        </div>
                        <div class="large-4 small-4 columns">
                            <span class="postfix">Time</span>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</div>
<div class="row">

    <div class="large-2 columns left">
        @Html.LabelFor(m => m.ProjectType)
        @Html.DropDownListFor(m => m.ProjectType, Model.ProjectTypes, "Select...", new { @class = "pretty" })
    </div>
    <div class="large-2 columns left">
        @Html.LabelFor(m => m.ProjectCategory)
        @Html.DropDownListFor(m => m.ProjectCategory, Model.ProjectCategories, "Select...", new { @class = "pretty" })
    </div>
    <div class="large-3 columns left">
        @Html.LabelFor(m => m.ConstructionTypeId)
        @Html.DropDownListFor(m => m.ConstructionTypeId, Model.ConstructionTypes, "Select...", new { @class = "pretty" })
    </div>
    <div class="large-4 columns left">
        @Html.LabelFor(m => m.BuildingTypeId)
        <select name="BuildingTypeId" class="pretty">
            <option value="">Select...</option>
            @foreach (var x in Model.BuildingTypes.Where(b => b.Parent == null).OrderBy(b => b.Name).ToList())
            {
                <optgroup label="@x.Name">
                    @foreach (var y in Model.BuildingTypes.Where(b => b.ParentId == x.Id).OrderBy(b => b.Name).ToList())
                    {
                        <option  value="@y.Id" @( y.Id == Model.BuildingTypeId ? "selected=\"selected\"" : "")>@y.Name</option>
                    }
                </optgroup>
            }
        </select>
    </div>
</div>

<div class="row">
    <div class="large-6 columns">
        @Html.LabelFor(m => m.InvitationOnly)
        @Html.EditorFor(m => m.InvitationOnly)
        @Html.LabelFor(m => m.HiddenFromSearch)
        @Html.EditorFor(m => m.HiddenFromSearch)
    </div>
</div>

<div class="row">
    <div class="large-7 columns">
        <div class="row">
            <div class="large-12 columns">
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address)
            </div>
        </div>

        <div class="row">
            <div class="large-5 columns">
                @Html.LabelFor(m => m.City)
                @Html.TextBoxFor(m => m.City)
            </div>
            <div class="large-3 columns">
                @Html.LabelFor(m => m.StateId)
                @Html.DropDownListFor(m => m.StateId, Model.States, "...", new { @class = "pretty" })
            </div>
            <div class="large-4 columns">
                @Html.LabelFor(m => m.PostalCode)
                @Html.TextBoxFor(m => m.PostalCode)

            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="large-12 columns">
        @if (Model.SelectedScope != null)
        {
            @Html.Partial("_SelectedScopes", Model.SelectedScope);
        }
        <csi-scope-picker service-url="theServiceUrl" selected-scopes="passBackSelection"></csi-scope-picker>
    </div>
</div>
