@model BCWeb.Models.Project.ViewModel.ProjectViewModel
@{
    ViewBag.Title = "Project Details";
    Layout = "~/Views/Shared/_Foundation.cshtml";
}

<div ng-controller="BPDetailsCtrl">
    <div class="row">
        <div class="large-2 columns">
            <ul class="side-nav">
                @* limit to creator*@
                <li>@Html.RouteLink("Edit...", "Default", new { controller = "Project", action = "Edit", id = Model.ProjectId })</li>
                <li>@Html.RouteLink("Add Documents", "Project_default", new { controller = "Document", action = "Create", projectId = Model.ProjectId })</li>


                @if (User.IsInRole("general_contractor") || User.IsInRole("subcontractor"))
                {


                    if (Model.Accepted.HasValue && Model.Accepted.Value)
                    { 
                    <li>@Html.RouteLink("Create Bid Package", "Project_default", new { controller = "BidPackage", action = "Create", projectId = Model.ProjectId, templateId = Model.BidPackageId })</li>
                    <li>@Html.RouteLink("Manage Bid Packages", "Project_default", new { controller = "BidPackage", action = "Index", projectId = Model.ProjectId })</li>    
                    <li>@Html.RouteLink("View Bids", "Project_default", new { controller = "Bid", action = "Received", projectId = Model.ProjectId })</li>
                    <li class="divider"></li>
                    <li>@Html.RouteLink("Compose Bid", "Project_default", new { controller = "Bid", action = "ComposeGC", projectId = Model.ProjectId })</li>
                    <li>@Html.RouteLink("Review Bid", "Project_default", new { controller = "Bid", action = "ReviewGC", projectId = Model.ProjectId })</li>
                    }
                }

                @if (User.IsInRole("architect"))
                {
                    <li>@Html.RouteLink("Invite General Contractors", "Project_default", new { controller = "Invitation", action = "Send", id = Model.BidPackageId })</li>
                    <li>@Html.RouteLink("View Invited", "Project_default", new { controller = "Invitation", action = "ViewInvited", bpId = Model.BidPackageId })</li>
                    <li>@Html.RouteLink("View Bids", "Project_default", new { controller = "Bid", action = "Received", projectId = Model.ProjectId })</li>
                }


            </ul>
        </div>
        <div class="large-8 columns left">
            <div class="row">
                <div class="large-12 columns">
                    <h3>@Model.Title</h3>@Html.HiddenFor(m => m.ProjectId)@Html.HiddenFor(m => m.BidPackageId)
                </div>

            </div>
            <div class="row">
                @if (User.IsInRole("general_contractor"))
                {
                    <div class="large-6 columns">
                        <div class="row">
                            <div class="large-12 columns" id="inviteResponseWrapper">
                                @* hide appropriate button depending on accept status*@
                                @if ((!Model.Accepted.HasValue || !Model.Accepted.Value) && (Model.InviteType.HasValue && Model.InviteType.Value == BCModel.Projects.InvitationType.SentFromCreatedBy))
                                {
                                    <input id="acceptBtn" type="button" value="Accept Invite" class="small success button" ng-click="accept()" />
                                }
                                @if (!Model.Accepted.HasValue || (Model.Accepted.Value && (Model.InviteType.HasValue && Model.InviteType.Value == BCModel.Projects.InvitationType.SentFromCreatedBy)))
                                {   
                                    <input id="declineBtn" type="button" value="Decline Invite" class="small alert button" ng-click="decline()" />
                                }
                                @if (!Model.InviteOnly)
                                {
                                    if ((!Model.Accepted.HasValue && !Model.InviteType.HasValue) || (Model.Accepted.HasValue && !Model.Accepted.Value && Model.InviteType.HasValue && Model.InviteType.Value == BCModel.Projects.InvitationType.SelfInvite))
                                    {
                                    <input id="joinBtn" type="button" value="Join Project" class="small success button" ng-click="join()" />
                                    }
                                    if (Model.ResponseDate.HasValue && (Model.Accepted.HasValue && Model.Accepted.Value) && (Model.InviteType.HasValue && Model.InviteType.Value == BCModel.Projects.InvitationType.SelfInvite))
                                    {
                                    <input id="leaveBtn" type="button" value="Leave Project" class="small alert button" ng-click="leave()" />
                                    }
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="large-12 columns" id="inviteStatusWrapper">
                                @if (Model.Accepted.HasValue && Model.ResponseDate.HasValue)
                                {
                                    <span>@(Model.Accepted.Value ? "Accepted" : "Declined") on  @Model.ResponseDate.Value.ToShortDateString()</span>
                                }
                            </div>
                        </div>
                    </div>

                }

                @if (User.IsInRole("general_contractor") || User.IsInRole("architect"))
                {

                    if (Model.Invited.HasValue && Model.AcceptedInvite.HasValue && Model.DeclinedInvite.HasValue && Model.SubmittedBid.HasValue)
                    {
                    <div class="large-6 columns">
                        <span>Sent @Model.Invited.Value.ToString() | Accepted @Model.AcceptedInvite.Value.ToString() | Declined @Model.DeclinedInvite.Value.ToString() | Bid @Model.SubmittedBid.Value.ToString()</span>
                    </div>
                    }
                }
            </div>
            <div class="row">
                <div class="large-4 columns">
                    @Html.LabelFor(m => m.Number)
                    @Html.DisplayFor(m => m.Number)
                </div>
                <div class="large-3 columns">
                    @Html.LabelFor(m => m.Architect)
                    @Html.DisplayFor(m => m.Architect)
                </div>
            </div>


            <div class="row">
                <div class="large-12 columns">
                    @Html.LabelFor(m => m.Description)
                    @Html.DisplayFor(m => m.Description)
                </div>
            </div>

            <div class="row">
                <div class="large-3 columns left">
                    @Html.LabelFor(m => m.BidDateTime)
                    @Html.DisplayFor(m => m.BidDateTime)
                </div>
                <div class="large-3 columns left">
                    @Html.LabelFor(m => m.WalkThruDate)
                    @Html.DisplayFor(m => m.WalkThruDate)
                </div>
            </div>

            <div class="row">

                <div class="large-2 columns left">
                    @Html.LabelFor(m => m.ProjectType)
                    @Html.DisplayFor(m => m.ProjectType)
                </div>
                <div class="large-2 columns left">
                    @Html.LabelFor(m => m.ProjectCategory)
                    @Html.DisplayFor(m => m.ProjectCategory)
                </div>
                <div class="large-4 columns left">
                    @Html.LabelFor(m => m.ConstructionType)
                    @Html.DisplayFor(m => m.ConstructionType)
                </div>
                <div class="large-4 columns left">
                    @Html.LabelFor(m => m.BuildingType)
                    @Html.DisplayFor(m => m.BuildingType)
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div>
                        @Html.LabelFor(m => m.InviteOnly)
                        @Html.DisplayFor(m => m.InviteOnly)
                    </div>
                    <div>
                        @Html.LabelFor(m => m.HiddenFromSearch)
                        @Html.DisplayFor(m => m.HiddenFromSearch)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="large-7 columns">
                    <div class="row">
                        <div class="large-12 columns">
                            @Html.LabelFor(m => m.Address)
                            @Html.DisplayFor(m => m.Address)
                        </div>
                    </div>

                    <div class="row">
                        <div class="large-5 columns">
                            @Html.LabelFor(m => m.City)
                            @Html.DisplayFor(m => m.City)
                        </div>
                        <div class="large-3 columns">
                            @Html.LabelFor(m => m.State)
                            @Html.DisplayFor(m => m.State)
                        </div>
                        <div class="large-4 columns">
                            @Html.LabelFor(m => m.PostalCode)
                            @Html.DisplayFor(m => m.PostalCode)
                        </div>
                    </div>
                </div>
            </div>
            @if (User.IsInRole("general_contractor"))
            {
                <div class="row">
                    <div class="large-8 columns">
                        <table>
                            <caption>Dcouments</caption>
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Url</th>
                                    <th>Notes</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.ProjectDocs != null)
                                {
                                    foreach (var doc in Model.ProjectDocs)
                                    {
                                    <tr>
                                        <td>@Html.RouteLink(doc.Name, "Project_default", new { controller = "Document", action = "Details", id = doc.Id })</td>
                                        <td><a href="@doc.Url">@doc.Url</a></td>
                                        <td title="@doc.Notes">@doc.Notes</td>
                                    </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            <div class="row">
                <div class="large-12 columns">
                    @Html.LabelFor(m => m.SelectedScope)

                    <dl class="accordion" data-accordion>
                        @foreach (var s1 in Model.SelectedScope.Where(s => !s.parentId.HasValue))
                        {
                            <dd>
                                <a href="@string.Format("#{0}", s1.Id)">@s1.Description</a>
                                @if (Model.SelectedScope.Where(s => s.parentId.HasValue && s.parentId.Value == s1.Id).Count() > 0)
                                {
                                    <div id="@s1.Id" class="content">
                                        <dl class="accordion" data-accordion>
                                            @foreach (var s2 in Model.SelectedScope.Where(s => s.parentId.HasValue && s.parentId.Value == s1.Id))
                                            {
                                                <dd>
                                                    <a href="@string.Format("#{0}", s2.Id)">@s2.Description</a>
                                                    @if (Model.SelectedScope.Where(s => s.parentId.HasValue && s.parentId.Value == s2.Id).Count() > 0)
                                                    {
                                                        <div id="@s2.Id" class="content">
                                                            <dl class="accordion" data-accordion>
                                                                @foreach (var s3 in Model.SelectedScope.Where(s => s.parentId.HasValue && s.parentId.Value == s2.Id))
                                                                {
                                                                    <dd>
                                                                        <a href="@string.Format("#{0}", s3.Id)">@s3.Description</a>
                                                                    </dd>
                                                                }
                                                            </dl>
                                                        </div>
                                                    }
                                                </dd>
                                            }
                                        </dl>
                                    </div>
                                }
                            </dd>
                        }
                    </dl>
                </div>
            </div>
        </div>


    </div>
</div>

@Html.AntiForgeryToken()
@section scripts{
    @Scripts.Render("~/bundles/projectbpdetail")
}